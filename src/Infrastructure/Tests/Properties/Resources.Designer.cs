//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tests.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tests.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!-- Forward Shading Pipeline --&gt;
        ///&lt;Pipeline&gt;
        ///	&lt;Setup&gt;
        ///		&lt;RenderTarget id=&quot;SCENE&quot; depthBuf=&quot;true&quot; numColBufs=&quot;1&quot; format=&quot;RGBA8&quot; scale=&quot;1.0&quot; maxSamples=&quot;16&quot; /&gt;
        ///		&lt;RenderTarget id=&quot;DISTORTION&quot; depthBuf=&quot;false&quot; numColBufs=&quot;1&quot; format=&quot;RGBA8&quot; scale=&quot;1.0&quot; maxSamples=&quot;0&quot; /&gt;
        ///		&lt;RenderTarget id=&quot;DEPTH&quot; depthBuf=&quot;true&quot; numColBufs=&quot;1&quot; format=&quot;RGBA16F&quot; scale=&quot;1.0&quot; maxSamples=&quot;0&quot; /&gt;
        ///	&lt;/Setup&gt;
        ///	
        ///	&lt;CommandQueue&gt;
        ///		&lt;Stage id=&quot;Geometry&quot; link=&quot;materials/globalSettings.material.xml&quot;&gt;
        ///			&lt;SwitchTarget target=&quot;SCENE&quot; /&gt;
        ///			&lt;Clea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestPipeline {
            get {
                return ResourceManager.GetString("TestPipeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [[FX]]
        ///
        ///&lt;Sampler id=&quot;albedoMap&quot;&gt;
        ///	&lt;StageConfig addressMode=&quot;CLAMP&quot; filtering=&quot;none&quot; maxAnisotropy=&quot;2&quot; /&gt;
        ///&lt;/Sampler&gt;
        ///
        ///&lt;Sampler id=&quot;testTexture&quot; texUnit=&quot;4&quot;/&gt;
        ///
        ///&lt;Uniform id=&quot;modulate&quot; a=&quot;1.0&quot; b=&quot;0.5&quot; c=&quot;0.2&quot; d=&quot;0.4&quot;/&gt;
        ///
        ///&lt;Uniform id=&quot;data&quot;/&gt;
        ///
        ///&lt;Context id=&quot;ATTRIBPASS&quot;&gt;
        ///	&lt;Shaders vertex=&quot;VS_GENERAL&quot; fragment=&quot;FS_ATTRIBPASS&quot; /&gt;
        ///&lt;/Context&gt;
        ///
        ///&lt;Context id=&quot;AMBIENT&quot;&gt;
        ///	&lt;Shaders vertex=&quot;VS_GENERAL&quot; fragment=&quot;FS_AMBIENT&quot; /&gt;
        ///	&lt;RenderConfig writeDepth=&quot;False&quot; blendMode=&quot;MULT&quot; alphaTest=&quot;LESS&quot; alphaRef=&quot;0.1&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestShader {
            get {
                return ResourceManager.GetString("TestShader", resourceCulture);
            }
        }
    }
}
